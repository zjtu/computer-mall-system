<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace：用来指定当前的映射文件需要和哪个接口进行映射，需要指定接口的完整路径-->
<mapper namespace="com.cy.springboot.mapper.UserMapper">
<!--resultMap：自定义映射规则
    id属性:这个映射分配一个唯一的id值，对应的就是resultMap="id属性的值"
    type属性:取值是一个类，表示的是数据库查询结果和Java中的哪个实体类进行结果集的映射
-->
    <resultMap id="UserEntityMap" type="com.cy.springboot.entity.User">
<!--将表的字段和类的字段不一致的进行匹配指定，名称一致的可以省略不写，匹配结果写在result标签中
     配合完成名称不一致的映射：
    column属性：表中的字段名称
    property属性：实体类的属性名称
-->
<!--在定义映射规则时主键时不可以省略的，否则无法把唯一的一条记录存放在唯一的对象中-->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="createdUser" property="createdUser"></result>
        <result column="createdTime" property="createdTime"></result>
        <result column="modifiedUser" property="modifiedUser"></result>
        <result column="modifiedTime" property="modifiedTime"></result>
    </resultMap>
    <!--id属性:表示映射的接口中方法的名称
    useGeneratedKeys属性:表示开启某个字段的值递增(主键设置为递增)
    keyProperty属性:表示将表中的哪个字段作为主键进行递增-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user(username,password,salt,phone,email,gender,avatar,is_delete,created_user,created_time,modified_user,modified_time)
        VALUES (#{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},#{isDelete},#{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime})
    </insert>
<!--select 查询结果是一个对象或多个对象
    resultType属性:表示查询的结果集类型，需要指定对应映射类的类型，并且包含完整包接口
    resultMap属性:表示表的字段和类的对象属性名称不一致时，来自定义查询结果集的映射规则-->

    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username=#{username}
    </select>

    <update id="updatePasswordByUid">
        UPDATE
            t_user
        SET
            password = #{password},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE
            uid=#{uid}
    </update>

    <update id="updateInfoByUid">
        UPDATE
            t_user
        SET
            <if test="phone!=null">phone=#{phone},</if>
            <if test="email!=null">email=#{email},</if>
            <if test="gender!=null">gender=#{gender},</if>
                modified_user = #{modifiedUser},
                modified_time = #{modifiedTime}
        WHERE
            uid=#{uid}
    </update>
    <update id="updateAvatarByUid">
        UPDATE
            t_user
        SET
            avatar=#{avatar},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE
            uid=#{uid}
    </update>

    <select id="findByUid" resultMap="UserEntityMap">
        SELECT
            *
        FROM
            t_user
        WHERE
            uid=#{uid}
    </select>
</mapper>
